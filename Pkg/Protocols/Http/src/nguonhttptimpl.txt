import QtQuick 2.15
import QtQuick.Controls 2.15
import QtQuick.Layouts 1.15
import QtQuick.Window 2.15

Item {
    id: root
    width: 1280
    height: 800
    objectName: "Booking"
    signal continueBooking()
    signal navigateToPayment(var room)
    LayoutMirroring.enabled: false
    LayoutMirroring.childrenInherit: true

    function formatDate(date) {
        return date.getFullYear() + "-" +
               String(date.getMonth() + 1).padStart(2, '0') + "-" +
               String(date.getDate()).padStart(2, '0');
    }

    // == DỮ LIỆU PHÒNG ==
    ListModel {
        id: roomModel
    }

    // == PHÒNG ĐƯỢC CHỌN ==
    property var selectedRoom: ({})

    Component.onCompleted: {
        RoomController.getRooms();
    }

    Connections {
        target: RoomController
        function onRoomsFetched(rooms) {
            roomModel.clear();
            for (var i = 0; i < rooms.length; i++) {
                roomModel.append(rooms[i]);
            }
        }
        function onRoomFetchFailed(errorMsg) {
            console.log("Failed to fetch rooms:", errorMsg);
            errorDialog.text = errorMsg;
            errorDialog.open();
        }
        function onRoomSelected(room) {
            selectedRoom = room;
            console.log("Selected room:", room.roomId, room.roomNumber);
        }
        function onRoomBooked() {
            console.log("Room booked successfully");
            errorDialog.text = "Đặt phòng " + selectedRoom.roomNumber + " thành công!";
            errorDialog.open();
            RoomController.getRooms(); // Cập nhật lại danh sách phòng
        }
        function onRoomBookingFailed(errorMsg) {
            console.log("Room booking failed:", errorMsg);
            errorDialog.text = errorMsg;
            errorDialog.open();
        }
    }

    // == ERROR DIALOG ==
    Dialog {
        id: errorDialog
        modal: true
        focus: true
        title: "Thông báo"
        x: (parent.width - width) / 2
        y: (parent.height - height) / 2
        width: 300
        property alias text: errorText.text

        contentItem: Rectangle {
            color: "#ffffff"
            radius: 8
            border.color: "#ccc"
            border.width: 1

            ColumnLayout {
                anchors.fill: parent
                anchors.margins: 16
                spacing: 12

                Text {
                    id: errorText
                    font.pixelSize: 14
                    color: "#333"
                    wrapMode: Text.WordWrap
                    Layout.fillWidth: true
                }

                Button {
                    text: "OK"
                    Layout.fillWidth: true
                    onClicked: errorDialog.close()
                }
            }
        }
    }

    // ========== HEADER ==========
    Rectangle {
        id: header
        anchors.top: parent.top
        anchors.left: parent.left
        anchors.right: parent.right
        height: 60
        color: "#d32f2f"
        z: 1

        RowLayout {
            anchors.fill: parent
            anchors.margins: 16
            spacing: 16
            Text {
                text: "Muong Thanh Luxury HCM"
                color: "white"
                font.pixelSize: 20
                font.bold: true
            }
            Item { Layout.fillWidth: true }
            Rectangle {
                id: avatar
                width: 40
                height: 40
                radius: 20
                color: "#ffebee"
                border.color: "#880e4f"
                border.width: 1
                Text {
                    anchors.centerIn: parent
                    text: UserController.getFirstName() && UserController.getLastName() ? 
                          UserController.getFirstName()[0].toUpperCase() + UserController.getLastName()[0].toUpperCase() : "NA"
                    color: "#880e4f"
                    font.bold: true
                }
                MouseArea {
                    anchors.fill: parent
                    cursorShape: Qt.PointingHandCursor
                    onClicked: profileDialog.open()
                }
            }
        }
    }

    // ========== TITLE ==========
    Rectangle {
        id: titleBar
        anchors.top: header.bottom
        anchors.left: parent.left
        anchors.right: parent.right
        height: 60
        color: "transparent"
        z: 1

        Text {
            anchors.centerIn: parent
            text: "Chọn phòng"
            font.pixelSize: 28
            font.bold: true
            color: "#333"
        }

        Rectangle {
            anchors.left: parent.left
            anchors.right: parent.right
            anchors.bottom: parent.bottom
            height: 6
            color: "#f5ecec"
        }
        Rectangle {
            anchors.left: parent.left
            anchors.bottom: parent.bottom
            height: 4
            width: parent.width * 0.35
            anchors.margins: 0
            color: "#b45b5b"
        }
    }

    // ========== Booking summary ==========
    Rectangle {
        id: bookingSummary
        width: 320
        height: 240
        radius: 8
        color: "#fafafa"
        border.color: "#ddd"
        border.width: 1
        z: 3

        anchors.top: titleBar.bottom
        anchors.topMargin: 20
        anchors.right: parent.right
        anchors.rightMargin: 24

        ColumnLayout {
            anchors.fill: parent
            anchors.margins: 12
            spacing: 8

            Rectangle {
                Layout.fillWidth: true
                height: 48
                color: "transparent"
                Text {
                    anchors.centerIn: parent
                    text: "Đơn đặt phòng của tôi"
                    font.pixelSize: 18
                    font.bold: true
                    color: "#333"
                }
            }

            Rectangle {
                Layout.fillWidth: true
                height: 48
                color: "#fff3f3"
                RowLayout {
                    anchors.fill: parent
                    anchors.margins: 8
                    spacing: 8

                    Text {
                        text: "Phòng:"
                        font.pixelSize: 14
                        font.bold: true
                        color: "#333"
                        Layout.alignment: Qt.AlignVCenter
                    }
                    Text {
                        text: selectedRoom.roomNumber || "Chưa chọn phòng"
                        font.pixelSize: 15
                        font.bold: true
                        color: "#7f2f2f"
                        Layout.alignment: Qt.AlignVCenter
                    }
                }
            }

            Rectangle {
                Layout.fillWidth: true
                height: 36
                color: "#fff3f3"
                Text {
                    anchors.centerIn: parent
                    text: selectedRoom.roomType || "Chưa chọn loại phòng"
                    font.pixelSize: 14
                    font.bold: true
                    color: "#333"
                }
            }

            Rectangle {
                Layout.fillWidth: true
                height: 60
                color: "transparent"
                ColumnLayout {
                    anchors.fill: parent
                    anchors.margins: 4

                    Text {
                        text: selectedRoom.price ? selectedRoom.price.toLocaleString('vi-VN', { style: 'currency', currency: 'VND' }) : "0 ₫"
                        font.pixelSize: 24
                        font.bold: true
                        color: "#7f2f2f"
                        horizontalAlignment: Text.AlignHCenter
                        Layout.alignment: Qt.AlignHCenter
                    }

                    Button {
                        text: "Đặt phòng"
                        font.pixelSize: 22
                        background: Rectangle {
                            color: selectedRoom.roomId && selectedRoom.status === "available" ? "#7f2f2f" : "#cccccc"
                            radius: 4
                        }
                        contentItem: Text {
                            text: parent.text
                            color: selectedRoom.roomId && selectedRoom.status === "available" ? "white" : "#666666"
                            font.pixelSize: 22
                            horizontalAlignment: Text.AlignHCenter
                            verticalAlignment: Text.AlignVCenter
                        }
                        Layout.fillWidth: true
                        Layout.preferredHeight: 50
                        enabled: selectedRoom.roomId && selectedRoom.status === "available"
                        onClicked: {
                            let today = new Date();
                            let tomorrow = new Date();
                            tomorrow.setDate(today.getDate() + 1);

                            RoomController.bookRoom(
                                selectedRoom.roomId,
                                formatDate(today),
                                formatDate(tomorrow)
                            );

                            root.navigateToPayment(selectedRoom);
                        }
                    }
                }
            }
        }
    }

    // ========== MAIN SCROLL ==========
    ScrollView {
        id: mainScroll
        anchors.top: titleBar.bottom
        anchors.left: parent.left
        anchors.right: parent.right
        anchors.bottom: parent.bottom
        anchors.topMargin: 12
        anchors.leftMargin: 24
        anchors.rightMargin: 24
        clip: true
        z: 0

        ScrollBar.vertical: ScrollBar {
            policy: ScrollBar.AsNeeded
            anchors.right: parent.right
        }

        Column {
            id: mainContent
            width: mainScroll.width
            spacing: 24
            anchors.topMargin: 8

            Row {
                id: contentRow
                width: mainContent.width
                spacing: 0

                Column {
                    id: leftColumn
                    width: mainScroll.width - bookingSummary.width - 48
                    spacing: 20

                    Rectangle {
                        width: leftColumn.width
                        height: 60
                        color: "#fffaf0"
                        radius: 8
                        border.color: "#ccc"
                        RowLayout {
                            anchors.fill: parent
                            anchors.margins: 16
                            spacing: 16
                            Layout.alignment: Qt.AlignVCenter
                            ComboBox {
                                id: roomTypeFilter
                                Layout.preferredWidth: 166
                                Layout.preferredHeight: 35
                                model: ["Tùy chọn phòng", "single", "double", "family"]
                                anchors.verticalCenter: parent.verticalCenter
                                onCurrentTextChanged: {
                                    if (currentText === "Tùy chọn phòng") {
                                        for (var i = 0; i < roomModel.count; i++) {
                                            roomModel.get(i).visible = true;
                                        }
                                    } else {
                                        for (var j = 0; j < roomModel.count; j++) {
                                            roomModel.get(j).visible = roomModel.get(j).roomType === currentText;
                                        }
                                    }
                                }
                            }
                            ComboBox {
                                id: viewFilter
                                Layout.preferredWidth: 160
                                Layout.preferredHeight: 35
                                model: ["View cửa sổ", "View thành phố", "View biển"]
                                anchors.verticalCenter: parent.verticalCenter
                            }
                            Item { Layout.fillWidth: true }
                        }
                    }

                    Repeater {
                        model: roomModel
                        delegate: Rectangle {
                            width: leftColumn.width
                            height: visible ? 220 : 0
                            visible: true
                            radius: 12
                            color: "#fff"
                            border.color: "#e8e2e2"
                            border.width: 1

                            RowLayout {
                                anchors.fill: parent
                                anchors.margins: 16
                                spacing: 16

                                Rectangle {
                                    Layout.preferredWidth: leftColumn.width * 0.32
                                    Layout.fillHeight: true
                                    radius: 8
                                    clip: true
                                    color: "#f0f0f0"

                                    Image {
                                        anchors.fill: parent
                                        source: image
                                        fillMode: Image.PreserveAspectCrop
                                    }
                                }

                                ColumnLayout {
                                    Layout.fillWidth: true
                                    spacing: 6

                                    Text {
                                        text: roomType.charAt(0).toUpperCase() + roomType.slice(1)
                                        font.pixelSize: 20
                                        font.bold: true
                                    }

                                    Text {
                                        text: description
                                        font.pixelSize: 14
                                        color: "#444"
                                        wrapMode: Text.WordWrap
                                    }

                                    RowLayout {
                                        spacing: 16
                                        Text { text: "👥 " + guests; font.pixelSize: 14 }
                                        Text { text: "📐 " + area; font.pixelSize: 14 }
                                    }

                                    RowLayout {
                                        Layout.fillWidth: true
                                        spacing: 16

                                        Text {
                                            text: price.toLocaleString('vi-VN', { style: 'currency', currency: 'VND' })
                                            font.pixelSize: 18
                                            font.bold: true
                                            color: "#d32f2f"
                                        }

                                        Item { Layout.fillWidth: true }

                                        Button {
                                            text: status === "available" ? "Chọn" : "Đã đặt"
                                            width: 100
                                            height: 36
                                            enabled: status === "available"
                                            background: Rectangle {
                                                color: status === "available" ? "#7f2f2f" : "#cccccc"
                                                radius: 4
                                            }
                                            contentItem: Text {
                                                text: parent.text
                                                color: status === "available" ? "white" : "#666666"
                                                font.pixelSize: 14
                                                horizontalAlignment: Text.AlignHCenter
                                                verticalAlignment: Text.AlignVCenter
                                            }
                                            onClicked: {
                                                RoomController.selectRoom(roomId);
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }

                    Rectangle { width: leftColumn.width; height: 16; color: "transparent" }
                }

                Item {
                    width: bookingSummary.width + 48
                }
            }

            Rectangle {
                id: footer
                width: mainContent.width
                height: 220
                color: "#001f3f"
                radius: 0
                border.width: 0
                anchors.horizontalCenter: mainContent.horizontalCenter

                RowLayout {
                    anchors.fill: parent
                    anchors.margins: 24
                    spacing: 48

                    ColumnLayout {
                        spacing: 8
                        Label {
                            text: "fit@hcmus"
                            color: "#00cc99"
                            font.pixelSize: 20
                            font.bold: true
                        }
                        Label {
                            text: "Faculty of Information Technology,\nVNUHCM - University of Science"
                            color: "#ffffff"
                            wrapMode: Text.WordWrap
                        }
                    }

                    ColumnLayout {
                        spacing: 8
                        Label {
                            text: "Members"
                            color: "#00cc99"
                            font.pixelSize: 18
                            font.bold: true
                        }
                        Label { text: "• Phạm Hoàng Phúc"; color: "#ffffff" }
                        Label { text: "• Nguyễn Trực Phúc"; color: "#ffffff" }
                        Label { text: "• Nguyễn Khang Hy"; color: "#ffffff" }
                        Label { text: "• Lê Đinh Nguyên Phong"; color: "#ffffff" }
                    }

                    ColumnLayout {
                        spacing: 8
                        Label {
                            text: "Contact Us"
                            color: "#00cc99"
                            font.pixelSize: 18
                            font.bold: true
                        }
                        Label { text: "📞 0915 895 157"; color: "#ffffff" }
                        MouseArea {
                            cursorShape: Qt.PointingHandCursor
                            onClicked: Qt.openUrlExternally("mailto:nkhy2414@clc.fitus.edu.vn")

                            Label {
                                text: "✉ nkhy2414@clc.fitus.edu.vn"
                                color: "#00ccff"
                                font.underline: true
                            }
                        }
                    }
                }
            }
        }
    }

    // ========== PROFILE DIALOG ==========
    Dialog {
        id: profileDialog
        modal: true
        focus: true
        x: parent.width - width - 40
        y: 70
        width: 340
        contentItem: Rectangle {
            width: parent.width
            color: "#ffffff"
            radius: 8
            border.color: "#ccc"
            border.width: 1

            ColumnLayout {
                anchors.fill: parent
                anchors.margins: 16
                spacing: 12

                Text {
                    text: UserController.getFirstName() && UserController.getLastName() ? 
                          UserController.getFirstName() + " " + UserController.getLastName() : "Guest"
                    font.bold: true
                    font.pixelSize: 16
                }

                Text {
                    text: UserController.getFirstName() ? "+84915895157" : "No phone"
                    color: "#666"
                    font.pixelSize: 14
                }

                Rectangle {
                    color: "#fce4ec"
                    radius: 4
                    Layout.fillWidth: true
                    height: 32
                    RowLayout {
                        anchors.fill: parent
                        anchors.margins: 6
                        spacing: 6
                        Text {
                            text: "\u2714"
                            font.pixelSize: 14
                            color: "#c2185b"
                        }
                        Text {
                            text: "Bạn đã nhận được khuyến mãi 10%"
                            font.pixelSize: 12
                            color: "#c2185b"
                        }
                    }
                }

                Button {
                    text: "Đăng xuất"
                    Layout.fillWidth: true
                    onClicked: {
                        UserController.logoutUser();
                    }
                }
            }
        }
    }

    Connections {
        target: UserController
        function onLogoutSuccess() {
            profileDialog.close();
            stackView.replace("Login.qml");
        }
        function onLogoutFailed(errorMsg) {
            console.log("Logout failed: " + errorMsg);
            errorDialog.text = errorMsg;
            errorDialog.open();
        }
    }
}